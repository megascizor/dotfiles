[[plugins]]
repo = "Shougo/ddc.vim"
depends = ["denops.vim", "pum.vim"]
on_event = ["InsertEnter", "CursorHold"]
hook_add = """
nnoremap : <cmd>call CmdlinePre(':')<CR>:
nnoremap ? <cmd>call CmdlinePre('/')<CR>?

function! CmdlinePre(mode) abort
  " NOTE: It disables default command line completion.
  set wildchar=<C-t>
  set wildcharm=<C-t>

  cnoremap <expr><buffer> <TAB>
        \ pum#visible()
        \ ? '<cmd>call pum#map#insert_relative(+1)<CR>'
        \ : exists('b:ddc_cmdline_completion') ? ddc#map#manual_complete() : '<C-t>'

  " Overwrite sources.
  if !exists('b:prev_buffer_config')
    let b:prev_buffer_config = ddc#custom#get_buffer()
  endif
  if a:mode ==# ':'
    " call ddc#custom#patch_buffer('sources', ['cmdline', 'cmdline-history', 'around'])
    call ddc#custom#patch_buffer('keywordPattern', '[0-9a-zA-Z_:#]*')
  endif

  autocmd MyAutoCmd User DDCCmdlineLeave ++once call CmdlinePost()
  autocmd MyAutoCmd InsertEnter <buffer> ++once call CmdlinePost()

  call ddc#enable_cmdline_completion()
endfunction

function! CmdlinePost() abort
  silent! cunmap <buffer> <TAB>

  " Restore sources
  if exists('b:prev_buffer_config')
    call ddc#custom#set_buffer(b:prev_buffer_config)
    unlet b:prev_buffer_config
  else
    call ddc#custom#set_buffer({})
  endif

  set wildcharm=<TAB>
endfunction
"""
hook_source = """
call ddc#custom#patch_global('sources', ['around', 'rg'])
call ddc#custom#patch_global('cmdlineSources', {
      \ ':': ['cmdline-history', 'cmdline', 'around'],
      \ })

call ddc#custom#patch_global('sourceOptions', #{
      \ _: #{
      \   ignoreCase: v:true,
      \   matchers: ['matcher_head', 'matcher_length'],
      \   sorters: ['sorter_rank'],
      \ },
      \ around: #{
      \   mark: 'A',
      \   matchers: ['matcher_head'],
      \ },
      \ line: #{
      \   mark: 'line',
      \ },
      \ rg: #{
      \   mark: 'rg',
      \   minAutoCompleteLength: 5,
      \   enabledIf: "finddir('.git', ';') != ''",
      \ },
      \ nvim-lsp: #{
      \   mark: 'lsp',
      \   forceCompletionPattern: '\.\w*|:\w*|->\w*',
      \   dup: 'force',
      \ },
      \ cmdline: #{
      \   mark: 'cmdline',
      \   forceCompletionPattern: '\S/\S*|\.\w*',
      \   dup: 'force',
      \ },
      \ cmdline-history: #{
      \   mark: 'history',
      \   sorters: [],
      \ },
      \ })

call ddc#custom#patch_filetype(
      \ ['help', 'markdown', 'gitcommit'],
      \ 'sources',
      \ ['around', 'rg'],
      \ )
if has('nvim')
  call ddc#custom#patch_filetype(
        \ ['go', 'python', 'javascript', 'typescript', 'javascriptreact', 'typescriptreact', 'terraform'],
        \ 'sources',
        \ ['nvim-lsp', 'around'],
        \ )
endif

" Use pum.vim
call ddc#custom#patch_global('autoCompleteEvents', [
      \ 'InsertEnter',
      \ 'TextChangedI',
      \ 'TextChangedP',
      \ 'TextChangedT',
      \ 'CmdlineEnter',
      \ 'CmdlineChanged',
      \ ])
call ddc#custom#patch_global('ui', 'pum')

" Mappings
inoremap <expr> <TAB>
      \ pum#visible()
      \ ? '<cmd>call pum#map#insert_relative(+1)<CR>'
      \ : (col('.') <= 1 <BAR><BAR> getline('.')[col('.') - 2] =~# '\s') ? '<TAB>' : ddc#map#manual_complete()
inoremap <S-TAB> <cmd>call pum#map#insert_relative(-1)<CR>
inoremap <C-n> <cmd>call pum#map#insert_relative(+1)<CR>
inoremap <C-p> <cmd>call pum#map#insert_relative(-1)<CR>
inoremap <C-y> <cmd>call pum#map#confirm()<CR>
inoremap <C-e> <cmd>call pum#map#cancel()<CR>

cnoremap <expr> <TAB>
      \ pum#visible()
      \ ? '<cmd>call pum#map#insert_relative(+1)<CR>'
      \ : exists('b:ddc_cmdline_completion') ? ddc#manual_complete() : nr2char(&wildcharm)
cnoremap <S-TAB> <cmd>call pum#map#insert_relative(-1)<CR>
cnoremap <C-n> <cmd>call pum#map#insert_relative(+1)<CR>
cnoremap <C-p> <cmd>call pum#map#insert_relative(-1)<CR>
cnoremap <C-y> <cmd>call pum#map#confirm()<CR>
cnoremap <C-e> <cmd>call pum#map#cancel()<CR>

call ddc#enable()
"""

[[plugins]]
repo = "Shougo/pum.vim"

[[plugins]]
repo = "Shougo/ddc-ui-pum"
on_source = "ddc.vim"

[[plugins]]
repo = "Shougo/ddc-source-around"
on_source = "ddc.vim"

[[plugins]]
repo = "Shougo/ddc-source-line"
on_source = "ddc.vim"

[[plugins]]
repo = "Shougo/ddc-source-rg"
on_source = "ddc.vim"

[[plugins]]
repo = "Shougo/ddc-source-nvim-lsp"
on_source = "nvim-lspconfig"

[[plugins]]
repo = "Shougo/ddc-cmdline"
on_source = "ddc.vim"

[[plugins]]
repo = "Shougo/ddc-cmdline-history"
on_source = "ddc.vim"

[[plugins]]
repo = "Shougo/ddc-matcher_head"
on_source = "ddc.vim"

[[plugins]]
repo = "Shougo/ddc-matcher_length"
on_source = "ddc.vim"

[[plugins]]
repo = "Shougo/ddc-sorter_rank"
on_source = "ddc.vim"
